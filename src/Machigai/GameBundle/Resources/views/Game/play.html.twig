{% extends "MachigaiGameBundle:Game:base.html.twig" %}

{% block stylesheets %}
<style> 
 img{line-height:0;}
 img.machigai_star, img.otetsuki_heart{vertical-align:middle;}
	
 section#illust_area{background: url({{asset('bundles/machigaigame/images/parts/game_mondaiarea.png')}}) ;}
</style>
{% endblock %}

{% block body %}
<!-- Game Default Structure -->
<header style="position:fixed;height:15%; width:100%; background: url({{ asset('bundles/machigaigame/images/parts/game_header.png') }})">
<h1 style="font-size:1em;display:inline-block;width:24%;padding:0% 1%;"><marquee id="title" >タイトル</marquee></h1>
<div style="height:7%;display:inline-block;width:27%;padding:0% 1%;">
 <p id="copyright" style="font-size:0.5em;">コピーライトだよ！</p>
 <p id="url" style="font-size:0.5em;">http://www.copyright.co.jp.com.uk</p>

</div>
<div style="display:inline-block;width:42%;">
 <div id="machigai" style="vertical-align:middle;">
   <img src= "{{ asset('bundles/machigaigame/images/parts/game_machigai.png') }}" width="20%" style="vertical-align:middle;"/>
  {% for i in 0..7 %}
   <img id="star-{{i}}" class="machigai_star" src= "{{ asset('bundles/machigaigame/images/parts/game_star_off.png') }}" width="6%"/>
  {% endfor %}
 </div>
 <div id="otetsuki" >
   <img src= "{{ asset('bundles/machigaigame/images/parts/game_otetsuki.png') }}" width="20%" style="vertical-align:middle;"/>
  {% for i in 0..7 %}
   <img id="heart-{{i}}" class="otetsuki_heart" src= "{{ asset('bundles/machigaigame/images/parts/game_heart_on.png') }}" width="6%"/>
  {% endfor %}
 </div>
</div>
</header>
<section id="illust_area" style="position:fixed;line-height:0;display:block;top:15%;height:80%;width:100%;">
 <img id="illust1" class="illust" src="{{ asset('bundles/machigaigame/questions/3/MS00003_1.png') }}" width="49.5%" " style="left:0;position:absolute;">
 <img id="illust2" class="illust" src="{{ asset('bundles/machigaigame/questions/3/MS00003_2.png') }}" width="49.5%" style="left:50%;position:absolute;">
</section>
<footer style="position:fixed;height:17%;width:100%;bottom:0; background: url({{ asset('bundles/machigaigame/images/parts/game_header.png') }})">
<div id="left_time" style="display:inline-block; width:20%;"><p style="text-align:center;">残り時間</p><p  id="time_left" style="text-align:center;">5:00</p></div>
<div id="slidebar_area" style="display:inline-block; width:56%;">
<img  id="slidebar" src= "{{ asset('bundles/machigaigame/images/parts/game_slidebar.png') }}" width="50%" style="position:fixed;left:20%;bottom:4%;"/></a>
<img id="slidehandle" src= "{{ asset('bundles/machigaigame/images/parts/game_slideicon.png') }}" width="15%" style="position:fixed;left:20%;bottom:1.9%;" /></a>
</div>
<div id="menu_area" style="display:inline-block; width:22%;position:relative;top:5%;">
 <img id="" src= "{{ asset('bundles/machigaigame/images/parts/game_icon_hint.png') }}" width="30%" onclick="Game.popup($('#game_hint'));" />
 <img id="" src= "{{ asset('bundles/machigaigame/images/parts/game_icon_save.png') }}" width="30%" onclick="Game.popup($('#game_save'));"/>
 <img id="" src= "{{ asset('bundles/machigaigame/images/parts/game_icon_giveup.png') }}" width="30%" onclick="Game.popup($('#game_giveup'));"/>
</div>
</footer>

<!-- RotationAlert -->
<div id="RotationAlert" class="popup hidden" style="z-index:1000;background-color:black;color:white;"> 
 <p style="font-size:300%;">WARNING</p>
 <p style="font-size:130%;">端末を横向きにしてください。</p> -->
</div>               
<!-- Game Start -->
<div id="game_start" class="popup" > 
<p class="popup_answer">
 <img id="game_start_image" class="popup_image" src= "{{ asset('bundles/machigaigame/images/parts/popup_questiondownload.png') }}" width="60%" />
</p>
</div>

<!-- Game Hint Popup -->
<div id="game_hint" class="popup" style="visibility:hidden" onclick="Game.play();"> 
 <div class="popup_answer">
  <img class="popup_image" src= "{{ asset('bundles/machigaigame/images/parts/popup_game_hint.png') }}" width="60%" />
  <div class="popup_answer2">
   <img class="game_popup_answer_yes" onclick="Game.showHint();" src="{{ asset('bundles/machigaigame/images/parts/button_yes.png') }}" width="30%" /></a>
   <img class="game_popup_answer_no" onclick="Game.play()" src="{{ asset('bundles/machigaigame/images/parts/button_no.png') }}" width="30%" />
  </div>
 </div>
</div>


<!-- Game Save Popup -->
<div id="game_save" class="popup" style="visibility:hidden" > 
 <div class="popup_answer">
  <img class="popup_image" src= "{{ asset('bundles/machigaigame/images/parts/popup_game_save.png') }}" width="60%" />
  <div class="popup_answer2">
   <img class="game_popup_answer_yes" onclick="Game.save();" src="{{ asset('bundles/machigaigame/images/parts/button_yes.png') }}" width="30%" /></a>
   <img class="game_popup_answer_no" onclick="Game.play()" src="{{ asset('bundles/machigaigame/images/parts/button_no.png') }}" width="30%" />
  </div>
 </div>
</div>


<!-- Game Giveup Popup -->
<div id="game_giveup" class="popup" style="visibility:hidden"> 
 <div class="popup_answer">
  <img class="popup_image" src= "{{ asset('bundles/machigaigame/images/parts/popup_game_giveup.png') }}" width="60%" />
  <div class="popup_answer2">
   <img class="game_popup_answer_yes" onclick="Game.giveup();" src="{{ asset('bundles/machigaigame/images/parts/button_yes.png') }}" width="30%" /></a>
   <img class="game_popup_answer_no" onclick="Game.play()" src="{{ asset('bundles/machigaigame/images/parts/button_no.png') }}" width="30%" />
  </div>
 </div>
</div>

{% endblock %}

{% block javascripts %}
<script>
var DEBUG_MODE = true;

//window.onunload= function(){alert("Unload!") };
document.onundo= function(){alert("Undo!");};
window.onredo= function(){alert("Redo!");};
window.onmessage= function(){alert("OnMessage!");};
//window.onerror= function(e){alert();};
window.onreadystatechange= function(){alert("OnReadyStateChange!");};
//window.ondragstart= function(){alert("dragstart!")};
//window.onpageshow = function(){alert("Come back!")}
//window.onpagehide = function(){alert("Hiding!")}

// Setup Timer
var leftTime = $("#time_left");
var calcurateMSec = 100;
leftTime.leftTime = 360000;
leftTime.updateText = function(){
	remining_txt = msecToTimeStr(this.leftTime);
	this.text(remining_txt);
};
leftTime.updateText();
function msecToTimeStr(msec){
	var total_sec = Math.floor(msec/1000);
	var min = Math.floor(total_sec /60);
	var sec = total_sec % 60;
	if(sec < 10) sec = "0"+ sec;
	if(min < 10) min = "0"+ min;
	return (min + ":" + sec);
};

function displayPopupHint(){
 confirm("displayPopupHint!");
}
function displayPopupSave(){
 confirm("displayPopupSave!");
}
function displayPopupGiveup(){
 confirm("displayPopupGiveup!");
}
function ontouchstartCallback(event){
 //alert(event.clientY);
 
}
function ontouchmoveCallback(event){
  event.preventDefault();
/*  if(typeof(event) == "undefined"){
    alert("a");	
    $("#slidehandle").attr("left", event.clientY);
    return;
  a
}
*/
//  var touchX = event.touches[0].pageX;
/*  if (event.touches.length > 0) {
    for (var i=0; i<event.touches.length; i++) {
      var t = event.touches[i];
    }
  }
*/
	//$(this).css("left", event.touches[0].pageX+"px");
	this.pageX = event.changedTouches[0].pageX;
//	$("#title").text(event.changedTouches[0].pageX);
	//$("#title").text(100+"px");
}
function ontouchendCallback(event){

}
/////////////////////////////////
// Game Object
//
//

var Game = new Object;
Game.leftTime = leftTime;
Game.initialize = function(){
	Question.getData();
}
Game.setIllust = function(){

}
Game.start = function(){
	$("#game_start").hide();
	leftTime.startTimeStamp = new Date();
	this.timer = $.timer(function(){
		var is_update;
		var oldTime = leftTime.leftTime;
		leftTime.leftTime -= calcurateMSec;
		if(Math.floor(oldTime / 1000) != Math.floor()){
			leftTime.updateText();
		}	
		if(leftTime.leftTime <= 0){
			this.finish();
		}
	});
	this.timer.set({time:calcurateMSec,autostart:true});
	console.log("Game.start()");
}
Game.finish = function(){
	leftTime.finishTimeStamp = new Date();
	this.timer.stop();
	$("#title").text("Finish!");
	console.log("Game.finish()");
}
Game.complete = function(){
	this.timer.stop();
	this.completeTime = this.finishTime =new Date();
	this.state = "complete";
	console.log("Game.complete()");
	return this;
};
Game.save = function(){
	this.timer.stop();
	this.saveTime = new Date();
	this.state = "save";
	console.log("Game.save()");
	window.location.replace("{{ path('GameSelect') }}");
};

Game.giveup = function(){
	this.timer.stop();
	this.finishTime = new Date();
	this.state = "giveup";
	console.log("Game.giveup()");
	window.location.replace("{{ path('GameSelect') }}");
};
Game.fail = function(){
	this.timer.stop();
	this.finishTime = new Date();
	this.state = "fail";
	console.log("Game.fail()");
};

Game.resume = function(){
	this.startTime = new Date();
	this.timer.play();
	this.state = "resume";
	console.log("Game.resume()");
};

Game.pause = function(){
	this.timer.pause();
	this.state = "pause";
	console.log("Game.pause()");
};
Game.play = function(){
	$(".popup").hide();
	$(".popup").css("visibility","hidden");
	this.timer.play();
	this.state = "play";
	console.log("Game.play()");
	if(this.timer.isActive == false){
		console.log("Game.timer is NOT Active.");
	} else{ console.log("Game.timer is Active.");}
};
Game.popup = function(jquery_object){
	$(".popup").show();
	jquery_object.css("visibility", "visible");
	console.log("Game.popup()");
};
Game.showHint = function(){
	this.timer.play();
	this.state = "play";
//	this.status["hint"] = true;
	console.log("Game.showHint()");
};


/////////////////////////////////
// Question 
//
// 

var Question = new Object;
Question.illusts = $(".illust");
var illust1 = $(Question.illusts[0]);
var illust2 = $(Question.illusts[1]);
Question.number = 3;
Question.getData = function(){
	console.log("Question.getData()");
	//データの準備
	submitData = {number:Question.number};
	//リクエスト
	Question.response = $.ajax({
		async: true,
		timeout: 10000,
		type: "GET",
		cache: true,
		ifModified: false,
		dataType: 'xml',
		data: submitData,
//		url: "{{ path('GameGetData')}}",
		url: "{{ asset('bundles/machigaigame/questions/3/MS00003.xml')}}",
		beforeSend: function(){
			console.log("Question.getData:beforeSend()");
		},
		
		complete: function(xml){
			console.log("Question.getData:complete():");
			Question.differentNode = xml.responseXML.getElementsByTagName("different")[0];
			Question.id = xml.responseXML.getElementsByTagName("id")[0].textContent;
			Question.name = xml.responseXML.getElementsByTagName("name")[0].textContent;
			Question.difficulty = xml.responseXML.getElementsByTagName("difficulty")[0].textContent;
			Question.differentNode = xml.responseXML.getElementsByTagName("different")[0];
			Question.pointNodes = Question.differentNode.getElementsByTagName("point");
			Question.points = [];
			jQuery.each(Question.pointNodes,function(){
				var point = {};
				point['X'] = this.getElementsByTagName("x")[0].textContent;
				point['Y'] = this.getElementsByTagName("y")[0].textContent; 
				Question.points.push(point);
			});
			
			$("#title").text(Question.name);
			console.log("Question.getData:complete():");
		},
		
		success: function(){
			console.log("Question.getData:success()");
			$("#game_start_image").attr("src", "{{ asset('bundles/machigaigame/images/parts/popup_gamestart_first.png') }}");
			$("#game_start").bind("click", Game.start);
		},
		
		error: function(){
			console.log("Question.getData:error()");

		}
		
	});
};


/////////////////////////////////
// Illust
//
// 


/////////////////////////////////
// Otetsuki & Machigai
//
// 

var Otetsuki = $("#otetsuki"), Machigai= $("#machigai");
Machigai.stars = $(".machigai_star");
Otetsuki.hearts = $(".otetsuki_heart");
Machigai.star_count = 0;
Otetsuki.heart_count = 8;
Machigai.getStar = function(){
	this.star_count +=1;
	$(this.stars[this.star_count-1]).attr("src","{{ asset('bundles/machigaigame/images/parts/game_star_on.png') }}");
	if(this.heart_count <=0){
		Game.complete();
	}
	
	return this;
};
Otetsuki.loseHeart = function(){
	this.heart_count -=1;
	$(this.hearts[this.heart_count]).attr("src","{{ asset('bundles/machigaigame/images/parts/game_heart_off.png') }}");
	if(this.heart_count <=0){
		Game.gameover();
	}
	return this;
};


/////////////////////////////////
// Initialize Javascript for Game
//
//
Game.initialize();
$(function(){
	//	$('#slidehandle').bind("touchstart", ontouchstartCallback);
	//	$('#slidehandle').bind("touchmove", ontouchmoveCallback);
	//	$('#slidehandle').bind("touchend", ontouchendCallback);
	//	$('#slidehandle').bind("mousedown", ontouchstartCallback);
	//	$('#slidehandle').bind("mousemove", ontouchmoveCallback);
	//	$('#slidehandle').bind("mouseup", ontouchendCallback);
		//Andorid WebAppナビゲーションバー非表示対策
		$(window).bind("load",function(){if(navigator.userAgent.match(/Android/i)){
		    window.scrollTo(0,1);
		 }});
	$(window).bind("load",function(){window.scrollTo(0,0);});
/*	$(window).bind("load orientationchange",function(){
		if(Math.abs(window.orientation) == 90){
			//横向きの場合の命令
			unless(DEBUG_MODE == true){ $("#RotationAlert").hide();}
		}else{
			//縦向きの場合の命令:
			unless(DEBUG_MODE == true){ $("#RotationAlert").show();}
		}
	})
*/	/* タッチできる環境なら true、そうでないなら false 。
	   ここで先に判別しておきます。 */
	var isTouch = ('ontouchstart' in window);
	illust1.originalWidth =  illust1.width(); 
	illust1.originalHeight =  $(document) * 70.0/ 100.0;
	illust1.css({clip:"rect(" + "0" +"," + illust1.width() +"px," + illust1.originalHeight + "px," +"0"+")", position:"absolute"});
	illust2.css({clip:"rect(" + "0" +"," + illust2.width() +"px," + "1000" + "px," +"0"+")", position:"absolute"});
	$('.illust').bind({
                 
    /* タッチの開始、マウスボタンを押したとき */
    'touchstart mousedown': function(e) {
        // ページが動いたり、反応を止める
        e.preventDefault();
         
        // 開始位置 X,Y 座標を覚えておく
        // （touchmove イベントを通らず終了したときのために必ず覚えておくこと）
        this.pageX = (isTouch ? event.changedTouches[0].pageX : e.pageX);
        this.pageY = (isTouch ? event.changedTouches[0].pageY : e.pageY);
        // 現在の illust の場所を覚えておく
        this.left = $(this).position().left;
	this.haba = $(this).width();
	this.right = this.left + this.haba; 
        this.top = $(this).position().left;
	this.takasa = $(this).height();
	this.bottom = this.left + this.haba; 
        // タッチ処理を開始したフラグをたてる
        this.touched = true;
    },
    /* タッチしながら移動、マウスのドラッグ */
    'touchmove mousemove': function(e) {
         
        // 開始していない場合は動かないようにする
        // 過剰動作の防止
        if (!this.touched) {
            return;
        }
         
        // ページが動くのを止める
        e.preventDefault();
         
        // 移動先の hoge の位置を取得する
        this.left = this.left - (this.pageX - (isTouch ? event.changedTouches[0].pageX : e.pageX) );
	this.right = this.left + this.haba;
        this.top = this.top - (this.pageY - (isTouch ? event.changedTouches[0].pageY : e.pageY) );
/*	if( this.left < this.min){
		this.left = this.min;
		this.right = this.left + this.haba;
	}else if( this.right > this.max){
		this.right = this.max;
		this.left = this.right - this.haba;
	}
*/	//スライダーの割合を計算
	this.ratio = 1.0 + (this.left - this.min) / (this.max -this.min - this.haba);


	//clip用変数の定義
	this.illustWidth = this.ratio * this.originalWidth ;
	this.illustHeight = this.ratio * this.originalHeight ;
	var dw = this.illustWidth - this.originalWidth;	
	var dh = this.illustHeight - this.originalHeight;
	this.cliptop = dh;
	this.clipbottom = dh + this.originalHeight;
	this.clipleft = dw;
	this.cilpright = dw + this.originalWidth;
//	$(this).css({clip:"rect(" + this.cliptop +"px," + this.clipleft +"px," + this.clipbottom + "px," + this.clipright+")", position:"absolute"});
	
	//$(".illust").attr({width:illust1.illustWidth});
	// 位置 X 座標を覚えておく
	this.pageX = (isTouch ? event.changedTouches[0].pageX : e.pageX);
	this.pageY = (isTouch ? event.changedTouches[0].pageY : e.pageY);
	$("#title").text("" + this.originalWidth +" top=>"+ this.cliptop + " right=>" + this.clipright + " bottom=>" + this.clipbottom + " left=>" + this.clipleft );

    },
    /* タッチの終了、マウスのドラッグの終了 */
    'touchend mouseup': function(e) {
        if (!this.touched) {
            return;
        }
         
        // タッチ処理は終了したため、フラグをたたむ
        this.touched = false;
         
        // 必要なら以下で最終の hoge の位置を取得し何かに使う
        // this.pageX
        // this.pageY
    }
});
/* hoge のイベントを jQuery.bind で捕獲します。 */
$('#slidehandle').bind({
                 
    /* タッチの開始、マウスボタンを押したとき */
    'touchstart mousedown': function(e) {
        // ページが動いたり、反応を止める
        e.preventDefault();
         
        // 開始位置 X,Y 座標を覚えておく
        // （touchmove イベントを通らず終了したときのために必ず覚えておくこと）
        this.pageX = (isTouch ? event.changedTouches[0].pageX : e.pageX);
 
        // 現在の hoge の場所を覚えておく
        this.left = $(this).position().left;
	this.adjustMax = 1.05;
        this.max = $("#slidebar").position().left + $("#slidebar").width() * this.adjustMax;
	this.min = $("#slidebar").position().left; 
	this.haba = $(this).width();
	this.right = this.left + this.haba; 
        // タッチ処理を開始したフラグをたてる
        this.touched = true;
    },
    /* タッチしながら移動、マウスのドラッグ */
    'touchmove mousemove': function(e) {
         
        // 開始していない場合は動かないようにする
        // 過剰動作の防止
        if (!this.touched) {
            return;
        }
         
        // ページが動くのを止める
        e.preventDefault();
         
        // 移動先の hoge の位置を取得する
        this.left = this.left - (this.pageX - (isTouch ? event.changedTouches[0].pageX : e.pageX) );
	this.right = this.left + this.haba;
	if( this.left < this.min){
		this.left = this.min;
		this.right = this.left + this.haba;
	}else if( this.right > this.max){
		this.right = this.max;
		this.left = this.right - this.haba;
	}
	//スライダーの割合を計算
	this.ratio = 1.0 + (this.left - this.min) / (this.max -this.min - this.haba);

	// slider を移動させる
	$(this).css({left:this.left, top:this.top});

	//clip用変数の定義
	illust1.illustWidth = this.ratio * illust1.originalWidth ;
	illust1.illustHeight = this.ratio * illust1.originalHeight ;
	var dw = illust1.illustWidth - illust1.originalWidth;	
	var dh = illust1.illustHeight - illust1.originalHeight;
	illust1.cliptop = dh;
	illust1.clipbottom = dh + illust1.originalHeight;
	illust1.clipleft = dw;
	illust1.cilpright = dw + illust1.originalWidth;
	
	$(this).css({left:this.left});
	
	$(".illust").attr({width:illust1.illustWidth});
	// 位置 X 座標を覚えておく
	this.pageX = (isTouch ? event.changedTouches[0].pageX : e.pageX);
    },
    /* タッチの終了、マウスのドラッグの終了 */
    'touchend mouseup': function(e) {
        if (!this.touched) {
            return;
        }
         
        // タッチ処理は終了したため、フラグをたたむ
        this.touched = false;
         
        // 必要なら以下で最終の hoge の位置を取得し何かに使う
        // this.pageX
        // this.pageY
    }
});
});
</script>
{% endblock %}
